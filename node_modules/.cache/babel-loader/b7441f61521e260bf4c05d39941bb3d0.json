{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node.js Projects\\\\react-todo-app\\\\src\\\\components\\\\TodoForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst TodoForm = props => {\n  _s();\n\n  const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\n  const inputRef = useRef(null);\n  useEffect(() => {\n    inputRef.current.focus();\n  });\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    props.onSubmit({\n      id: Math.floor(Math.random() * 10000),\n      text: input\n    });\n    setInput(\"\");\n  };\n\n  const handleChange = e => {\n    setInput(e.target.value);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"todo-form\",\n    onSubmit: handleSubmit,\n    children: props.edit ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Update your Todo here...\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input edit\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Update Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"text\",\n        placeholder: \"Add a Todo...\",\n        value: input,\n        name: \"text\",\n        className: \"todo-input edit\",\n        onChange: handleChange,\n        ref: inputRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"todo-button\",\n        children: \"Add Todo\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoForm, \"7XuUZj94ShAYXwsBcW+3ru872BQ=\");\n\n_c = TodoForm;\nexport default TodoForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoForm\");","map":{"version":3,"sources":["D:/Node.js Projects/react-todo-app/src/components/TodoForm.js"],"names":["React","useState","useEffect","useRef","TodoForm","props","input","setInput","edit","value","inputRef","current","focus","handleSubmit","e","preventDefault","onSubmit","id","Math","floor","random","text","handleChange","target"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;;;;AAEA,MAAMC,QAAQ,GAAIC,KAAD,IAAW;AAAA;;AAExB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBN,QAAQ,CAACI,KAAK,CAACG,IAAN,GAAaH,KAAK,CAACG,IAAN,CAAWC,KAAxB,GAAgC,EAAjC,CAAlC;AAEA,QAAMC,QAAQ,GAAGP,MAAM,CAAC,IAAD,CAAvB;AAEAD,EAAAA,SAAS,CAAC,MAAI;AAEVQ,IAAAA,QAAQ,CAACC,OAAT,CAAiBC,KAAjB;AACH,GAHQ,CAAT;;AAKA,QAAMC,YAAY,GAAIC,CAAD,IAAO;AAExBA,IAAAA,CAAC,CAACC,cAAF;AAEAV,IAAAA,KAAK,CAACW,QAAN,CAAe;AACXC,MAAAA,EAAE,EAAEC,IAAI,CAACC,KAAL,CAAWD,IAAI,CAACE,MAAL,KAAc,KAAzB,CADO;AAEXC,MAAAA,IAAI,EAAEf;AAFK,KAAf;AAKAC,IAAAA,QAAQ,CAAC,EAAD,CAAR;AAEH,GAXD;;AAaA,QAAMe,YAAY,GAAIR,CAAD,IAAO;AACxBP,IAAAA,QAAQ,CAACO,CAAC,CAACS,MAAF,CAASd,KAAV,CAAR;AAEH,GAHD;;AAKA,sBAEI;AAAM,IAAA,SAAS,EAAC,WAAhB;AAA4B,IAAA,QAAQ,EAAEI,YAAtC;AAAA,cACKR,KAAK,CAACG,IAAN,gBACG;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,0BAA/B;AAA0D,QAAA,KAAK,EAAEF,KAAjE;AAAwE,QAAA,IAAI,EAAC,MAA7E;AAAoF,QAAA,SAAS,EAAC,iBAA9F;AAAgH,QAAA,QAAQ,EAAEgB,YAA1H;AAAwI,QAAA,GAAG,EAAEZ;AAA7I;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA,oBADH,gBAMG;AAAA,8BACA;AAAO,QAAA,IAAI,EAAC,MAAZ;AAAmB,QAAA,WAAW,EAAC,eAA/B;AAA+C,QAAA,KAAK,EAAEJ,KAAtD;AAA6D,QAAA,IAAI,EAAC,MAAlE;AAAyE,QAAA,SAAS,EAAC,iBAAnF;AAAqG,QAAA,QAAQ,EAAEgB,YAA/G;AAA6H,QAAA,GAAG,EAAEZ;AAAlI;AAAA;AAAA;AAAA;AAAA,cADA,eAEA;AAAQ,QAAA,SAAS,EAAC,aAAlB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAFA;AAAA;AAPR;AAAA;AAAA;AAAA;AAAA,UAFJ;AAiBH,CA9CD;;GAAMN,Q;;KAAAA,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import React, { useState, useEffect, useRef } from 'react'\r\n\r\nconst TodoForm = (props) => {\r\n\r\n    const [input, setInput] = useState(props.edit ? props.edit.value : \"\");\r\n\r\n    const inputRef = useRef(null);\r\n    \r\n    useEffect(()=>{\r\n\r\n        inputRef.current.focus();\r\n    });\r\n\r\n    const handleSubmit = (e) => {\r\n\r\n        e.preventDefault();\r\n\r\n        props.onSubmit({\r\n            id: Math.floor(Math.random()*10000),\r\n            text: input\r\n        });\r\n\r\n        setInput(\"\");\r\n        \r\n    }\r\n\r\n    const handleChange = (e) => {\r\n        setInput(e.target.value);\r\n\r\n    }\r\n\r\n    return (\r\n       \r\n        <form className=\"todo-form\" onSubmit={handleSubmit}>\r\n            {props.edit ? (\r\n                <>\r\n                <input type=\"text\" placeholder=\"Update your Todo here...\" value={input} name=\"text\" className=\"todo-input edit\" onChange={handleChange} ref={inputRef} />\r\n                <button className=\"todo-button\">Update Todo</button>\r\n                </>\r\n            ) : (\r\n                <>\r\n                <input type=\"text\" placeholder=\"Add a Todo...\" value={input} name=\"text\" className=\"todo-input edit\" onChange={handleChange} ref={inputRef} />\r\n                <button className=\"todo-button\">Add Todo</button>\r\n                </>\r\n            )}\r\n            \r\n        </form>\r\n    )\r\n}\r\n\r\nexport default TodoForm\r\n"]},"metadata":{},"sourceType":"module"}