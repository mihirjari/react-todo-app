{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node.js Projects\\\\react-todo-app\\\\src\\\\components\\\\TodoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport Todo from './Todo';\nimport TodoForm from './TodoForm';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoList = () => {\n  _s();\n\n  const [todos, setTodos] = useState([]);\n\n  const addTodo = todo => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n\n    const newTodos = [todo, ...todos];\n    setTodos(newTodos);\n  };\n\n  const completeTodo = id => {\n    let updatedTodos = todos.map(todo => {\n      if (todo.id === id) {\n        todo.isComplete = !todo.isComplete;\n      }\n\n      return todo;\n    });\n    setTodos(updatedTodos);\n  };\n\n  const removeTodo = id => {\n    const removeArray = [...todos].filter(todo => todo.id !== id);\n    setTodos(removeArray);\n  };\n\n  const updateTodo = (todoId, newValue) => {\n    if (!todo.text || /^\\s*$/.test(todo.text)) {\n      return;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"What's the plan for today?\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(TodoForm, {\n      onSubmit: addTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Todo, {\n      todos: todos,\n      completeTodo: completeTodo,\n      removeTodo: removeTodo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoList, \"ZATHeV9x55jFrDOww2hwcxQ3V1U=\");\n\n_c = TodoList;\nexport default TodoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoList\");","map":{"version":3,"sources":["D:/Node.js Projects/react-todo-app/src/components/TodoList.js"],"names":["React","useState","Todo","TodoForm","TodoList","todos","setTodos","addTodo","todo","text","test","newTodos","completeTodo","id","updatedTodos","map","isComplete","removeTodo","removeArray","filter","updateTodo","todoId","newValue"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,QAAP,MAAqB,YAArB;;;AAEA,MAAMC,QAAQ,GAAG,MAAM;AAAA;;AAEnB,QAAM,CAACC,KAAD,EAAQC,QAAR,IAAoBL,QAAQ,CAAC,EAAD,CAAlC;;AAEA,QAAMM,OAAO,GAAIC,IAAD,IAAU;AAEtB,QAAG,CAACA,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAAyC;AACrC;AACH;;AACD,UAAME,QAAQ,GAAG,CAACH,IAAD,EAAO,GAAGH,KAAV,CAAjB;AACAC,IAAAA,QAAQ,CAACK,QAAD,CAAR;AAEH,GARD;;AAUA,QAAMC,YAAY,GAAIC,EAAD,IAAQ;AAEzB,QAAIC,YAAY,GAAGT,KAAK,CAACU,GAAN,CAAUP,IAAI,IAAI;AACjC,UAAGA,IAAI,CAACK,EAAL,KAAUA,EAAb,EAAgB;AAEZL,QAAAA,IAAI,CAACQ,UAAL,GAAkB,CAACR,IAAI,CAACQ,UAAxB;AACP;;AACD,aAAOR,IAAP;AAEH,KAPsB,CAAnB;AAQJF,IAAAA,QAAQ,CAACQ,YAAD,CAAR;AACC,GAXD;;AAaA,QAAMG,UAAU,GAAIJ,EAAD,IAAQ;AACvB,UAAMK,WAAW,GAAG,CAAC,GAAGb,KAAJ,EAAWc,MAAX,CAAkBX,IAAI,IAAEA,IAAI,CAACK,EAAL,KAAYA,EAApC,CAApB;AACAP,IAAAA,QAAQ,CAACY,WAAD,CAAR;AACH,GAHD;;AAKA,QAAME,UAAU,GAAG,CAACC,MAAD,EAASC,QAAT,KAAsB;AACrC,QAAG,CAACd,IAAI,CAACC,IAAN,IAAc,QAAQC,IAAR,CAAaF,IAAI,CAACC,IAAlB,CAAjB,EAAyC;AACrC;AACH;AACJ,GAJD;;AAMA,sBACI;AAAA,4BAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI,QAAC,QAAD;AAAU,MAAA,QAAQ,EAAEF;AAApB;AAAA;AAAA;AAAA;AAAA,YAHJ,eAII,QAAC,IAAD;AAAM,MAAA,KAAK,EAAEF,KAAb;AAAoB,MAAA,YAAY,EAAEO,YAAlC;AAAgD,MAAA,UAAU,EAAEK;AAA5D;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH,CA9CD;;GAAMb,Q;;KAAAA,Q;AAgDN,eAAeA,QAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport Todo from './Todo';\r\nimport TodoForm from './TodoForm'\r\n\r\nconst TodoList = () => {\r\n\r\n    const [todos, setTodos] = useState([]);\r\n\r\n    const addTodo = (todo) => {\r\n\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return;\r\n        }\r\n        const newTodos = [todo, ...todos];\r\n        setTodos(newTodos);\r\n        \r\n    }\r\n\r\n    const completeTodo = (id) => {\r\n\r\n        let updatedTodos = todos.map(todo => {\r\n            if(todo.id===id){\r\n\r\n                todo.isComplete = !todo.isComplete\r\n        }\r\n        return todo\r\n    \r\n    })\r\n    setTodos(updatedTodos);\r\n    }\r\n\r\n    const removeTodo = (id) => {\r\n        const removeArray = [...todos].filter(todo=>todo.id !== id);\r\n        setTodos(removeArray);\r\n    }\r\n\r\n    const updateTodo = (todoId, newValue) => {\r\n        if(!todo.text || /^\\s*$/.test(todo.text)){\r\n            return;\r\n        }\r\n    }\r\n\r\n    return (\r\n        <div>\r\n\r\n            <h1>What's the plan for today?</h1>\r\n            <TodoForm onSubmit={addTodo} />\r\n            <Todo todos={todos} completeTodo={completeTodo} removeTodo={removeTodo} />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default TodoList\r\n"]},"metadata":{},"sourceType":"module"}