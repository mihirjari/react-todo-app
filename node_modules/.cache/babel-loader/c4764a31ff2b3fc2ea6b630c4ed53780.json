{"ast":null,"code":"var _jsxFileName = \"D:\\\\Node.js Projects\\\\react-todo-app\\\\src\\\\components\\\\Todo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { RiCloseCircleLine } from 'react-icons/ri';\nimport { TiEdit } from 'react-icons/ti';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Todo = ({}) => {\n  _s();\n\n  const [edit, setEdit] = useState({\n    id: null,\n    value: \"\"\n  });\n  return todos.map((todo, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n    className: todo.isComplete ? 'todo-row complete' : 'todo-row',\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      onClick: () => completeTodo(todo.id),\n      children: todo.text\n    }, todo.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icons\",\n      children: [/*#__PURE__*/_jsxDEV(RiCloseCircleLine, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 36\n      }, this), /*#__PURE__*/_jsxDEV(TiEdit, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 57\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 13\n    }, this)]\n  }, index, true, {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 9\n  }, this));\n};\n\n_s(Todo, \"UT6WiyVjuaqzOBt6ErfZ7yPe6Vk=\");\n\n_c = Todo;\nexport default Todo;\n\nvar _c;\n\n$RefreshReg$(_c, \"Todo\");","map":{"version":3,"sources":["D:/Node.js Projects/react-todo-app/src/components/Todo.js"],"names":["React","useState","RiCloseCircleLine","TiEdit","Todo","edit","setEdit","id","value","todos","map","todo","index","isComplete","completeTodo","text"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAAQC,iBAAR,QAAgC,gBAAhC;AACA,SAAQC,MAAR,QAAqB,gBAArB;;;AAGA,MAAMC,IAAI,GAAG,CAAC,EAAD,KAAQ;AAAA;;AAEjB,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBL,QAAQ,CAAC;AAC7BM,IAAAA,EAAE,EAAE,IADyB;AAE7BC,IAAAA,KAAK,EAAE;AAFsB,GAAD,CAAhC;AAOA,SAAOC,KAAK,CAACC,GAAN,CAAU,CAACC,IAAD,EAAOC,KAAP,kBACb;AAAK,IAAA,SAAS,EAAED,IAAI,CAACE,UAAL,GAAkB,mBAAlB,GAAwC,UAAxD;AAAA,4BACI;AAAmB,MAAA,OAAO,EAAE,MAAIC,YAAY,CAACH,IAAI,CAACJ,EAAN,CAA5C;AAAA,gBAAwDI,IAAI,CAACI;AAA7D,OAAUJ,IAAI,CAACJ,EAAf;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,8BAAuB,QAAC,iBAAD;AAAA;AAAA;AAAA;AAAA,cAAvB,eAA4C,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA,cAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ;AAAA,KAAyEK,KAAzE;AAAA;AAAA;AAAA;AAAA,UADG,CAAP;AAMH,CAfD;;GAAMR,I;;KAAAA,I;AAiBN,eAAeA,IAAf","sourcesContent":["import React, {useState} from 'react'\r\nimport {RiCloseCircleLine} from 'react-icons/ri';\r\nimport {TiEdit} from 'react-icons/ti';\r\n\r\n\r\nconst Todo = ({}) => {\r\n\r\n    const [edit, setEdit] = useState({\r\n        id: null,\r\n        value: \"\"\r\n    });\r\n\r\n\r\n\r\n    return todos.map((todo, index) => (\r\n        <div className={todo.isComplete ? 'todo-row complete' : 'todo-row'} key={index}>\r\n            <div key={todo.id} onClick={()=>completeTodo(todo.id)}>{todo.text}</div>\r\n            <div className=\"icons\"><RiCloseCircleLine /><TiEdit /></div>\r\n        </div>\r\n    ));\r\n}\r\n\r\nexport default Todo\r\n"]},"metadata":{},"sourceType":"module"}